name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install
        run: npm install
      - name: Run linter
        run: npm run lint

  unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        run: npm install
      - name: Run unit tests
        run: npm run test:unit

  e2e:
    runs-on: ubuntu-latest
    needs: unit
    if: "${{ github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}"
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        run: npm install
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Run Playwright E2E (${ { matrix.browser } })
        id: playwright_run
        run: npx playwright test tests --project=${{ matrix.browser }}

      - name: Compress Playwright reports (if present)
        id: compress_reports
        run: |
          ART=playwright-artifacts-${{ matrix.browser }}-${{ github.run_id }}.tar.gz
          DIRS=""
          for d in playwright-report playwright-report/traces playwright-report/screenshots playwright-report/videos test-results; do
            if [ -e "$d" ]; then DIRS="$DIRS $d"; fi
          done
          if [ -n "$DIRS" ]; then
            echo "Compressing:$DIRS"
            tar -czf "$ART" $DIRS
            echo "artifact=$ART" >> $GITHUB_OUTPUT
          else
            echo "No Playwright artifacts found to compress"
            echo "artifact=" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Upload compressed Playwright artifacts
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-${{ matrix.browser }}-${{ github.run_id }}
          path: ${{ steps.compress_reports.outputs.artifact }}
          retention-days: 7
